{"version":3,"file":"configReader.js","sourceRoot":"","sources":["../../src/lib/configReader.ts"],"names":[],"mappings":"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","sourcesContent":["import path = require('path');\r\nimport fs = require('fs');\r\nimport yaml = require('js-yaml');\r\n\r\ninterface Category{\r\n    name:string;\r\n    from:number;\r\n    to:number;\r\n} \r\n\r\nexport class ConfigReader\r\n{\r\n  protected _configPath : string;\r\n  protected _categories : Array<Category>;\r\n\r\n  constructor(configPath:string){\r\n      this._configPath = configPath;\r\n      this._categories = this.getCategories(this._configPath);\r\n  }\r\n  public get(age:number,level:number):any{\r\n    let category =  this._categories.find(p=> p.from>=age && p.to<=age );\r\n    let config = this.readConfigFile(path.join(this._configPath,category.name,level.toString(),'config.yaml'));\r\n    return config;\r\n  }\r\n\r\n  protected getCategories(categoriesPath:string): Array<Category> {\r\n    let result: Array<Category> = [];\r\n    let list:Array<string> =fs.readdirSync(categoriesPath);\r\n    for(let i=0;i<list.length;i++){\r\n      let item =  list[i];\r\n      let ages : Array<string> = item.split('-');\r\n      if(ages.length==1)result.push({name:item,from:parseInt(ages[0]),to:parseInt(ages[0])}); \r\n      else result.push({name:item,from:parseInt(ages[0]),to:parseInt(ages[1])});          \r\n    }\r\n    return result;\r\n  }\r\n  protected readConfigFile(filePath:string):any{\r\n    if(!fs.existsSync(filePath))return null;   \r\n    let content:string = fs.readFileSync(filePath,'utf8');\r\n    let data:any = yaml.safeLoad(content);\r\n    this.loadRerefences(path.dirname(filePath),data);\r\n    return data;\r\n  }\r\n  protected loadRerefences(sourcePath:string,source:any){\r\n    if(typeof source==\"object\")this.loadRerefencesFromObject(sourcePath,source);\r\n    if(Array.isArray(source))this.loadRerefencesFromArray(sourcePath,source); \r\n  }\r\n  protected loadRerefencesFromObject(sourcePath:string,obj:any){\r\n    for(let name in obj){\r\n      let p:any = obj[name]; \r\n      if(p._ref !== undefined)obj[name]= this.readConfigFile(path.join(sourcePath,p._ref));\r\n      else if(typeof p==\"object\")this.loadRerefencesFromObject(sourcePath,p);\r\n      else if(Array.isArray(p))this.loadRerefencesFromArray(sourcePath,p);      \r\n    }\r\n  }\r\n  protected loadRerefencesFromArray(sourcePath:string,array: any){\r\n    for(let i=0;i<array.length;i++){\r\n      let p= array[i];\r\n      if(typeof p==\"object\")this.loadRerefencesFromObject(sourcePath,p);\r\n      if(Array.isArray(p))this.loadRerefencesFromArray(sourcePath,p);  \r\n    }\r\n  }\r\n  \r\n\r\n}"]}